

name: Build and Deploy

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - dev
  push:
    branches: 
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up .NET SDK (version 8)
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Build the application
      - name: Build the application
        run: |
              dotnet build --configuration Release --output ./build

      - name: Run unit tests
        run: |
            dotnet test --configuration Release  # Run the unit tests

      # Publish the application (produces the artifacts in a folder)
      - name: Publish the application
        run: dotnet publish ./BackTestApi/Backtester.csproj --configuration Release --output ./publish

      - name: Upload Build Artifacts
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-build-artifacts
          path: ./publish  # Path to the folder where the build artifacts are located


  deploy:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: build
    environment: production

    steps:
      # Checkout code again (needed in the deploy job)
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dotnet-build-artifacts  # This should match the artifact name in the build job
          path: dotnet-build-artifacts  # This should match the artifact name in the build job

      # Azure login action to authenticate with Azure
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Prod for env name if on branch main
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
              echo "ENV_NAME=prod" >> "$GITHUB_ENV"

      - name: Set Dev for env name if on branch dev
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: |
              echo "ENV_NAME=dev" >> "$GITHUB_ENV"
        

      - name: Deploy ARM Template
        uses: azure/arm-deploy@v1
        id: armtemplate
        with:
          scope: subscription
          region: centralus
          template: './CICD/deploy.bicep' 
          parameters: environmentName=${{ env.ENV_NAME }} 
  
      - name: Run unit tests
        run: |
              echo  ${{ steps.armtemplate.outputs.deployedAppName }}  
      
      # Deploy to Azure Function App
      - name: Deploy to Azure Function App
        uses: azure/functions-action@v1
        with:
          app-name: ${{ steps.armtemplate.outputs.deployedAppName }}  
          include-hidden-files: true
          package: ./dotnet-build-artifacts   


