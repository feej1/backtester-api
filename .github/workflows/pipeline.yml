

name: Build and Deploy Azure Function

on:
  pull_request:
    types: [opened, edited, closed]
    branches:
      - main
      - development

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up .NET SDK (version 8)
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Build the application
      - name: Build the application
        run: dotnet build --configuration Release

      - name: Run unit tests
        run: |
            dotnet test --configuration Release  # Run the unit tests

      - name: Run unit tests
        run: |
          dotnet test --configuration Release  # Run the unit tests

      # Publish the application (produces the artifacts in a folder)
      - name: Publish the application
        run: dotnet publish --configuration Release --output ./publish

  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: build
    environment: production

    steps:
      # Checkout code again (needed in the deploy job)
      - name: Checkout code
        uses: actions/checkout@v3

      # Azure login action to authenticate with Azure
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Prod for env name if on branch main
        if: ${{ github.ref == 'refs/heads/main' }}
        run: echo "Setting environment name ${{github.ref}} "
        env:
          ENV_NAME: "prod"

      - name: Set Dev for env name if on branch development
        if: ${{ github.ref == 'refs/heads/development' }}
        run: echo "Setting environment name ${{github.ref}}"
        env:
          ENV_NAME: "dev"

      - name: Deploy ARM Template
        uses: azure/arm-deploy@v1
        id: armtemplate
        with:
          scope: subscription
          region: centralus
          template: './CICD/deploy.bicep' 
          parameters: environmentName=${{ env.ENV_NAME }} 
          deployment-mode: 'Incremental' 
  
      # Deploy to Azure Function App
      - name: Deploy to Azure Function App
        uses: azure/functions-action@v2
        with:
          app-name: ${{ steps.armtemplate.outputs.deployedAppName }}  
          package: ./publish   


